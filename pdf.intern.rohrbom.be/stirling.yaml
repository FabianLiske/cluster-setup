apiVersion: v1
kind: Namespace
metadata:
  name: svc-stirling
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: stirling-configs
  namespace: svc-stirling
spec:
  accessModes: [ReadWriteOnce]
  storageClassName: longhorn-2r
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: stirling-logs
  namespace: svc-stirling
spec:
  accessModes: [ReadWriteOnce]
  storageClassName: longhorn-2r
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: stirling-pdf
  namespace: svc-stirling
  labels: { app: stirling-pdf }
spec:
  replicas: 1
  selector:
    matchLabels: { app: stirling-pdf }
  template:
    metadata:
      labels: { app: stirling-pdf }
    spec:
      containers:
        - name: stirling-pdf
          image: docker.stirlingpdf.com/stirlingtools/stirling-pdf:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
          env:
            - name: DOCKER_ENABLE_SECURITY
              value: "false"
          volumeMounts:
            - name: configs
              mountPath: /configs
            - name: logs
              mountPath: /logs
          resources:
            requests: { cpu: 100m, memory: 256Mi }
            limits:   { cpu: "1",   memory: 1Gi }
          readinessProbe:
            httpGet: { path: "/", port: http }
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            httpGet: { path: "/", port: http }
            initialDelaySeconds: 20
            periodSeconds: 20
      volumes:
        - name: configs
          persistentVolumeClaim:
            claimName: stirling-configs
        - name: logs
          persistentVolumeClaim:
            claimName: stirling-logs
---
apiVersion: v1
kind: Service
metadata:
  name: stirling-pdf
  namespace: svc-stirling
  labels: { app: stirling-pdf }
spec:
  type: ClusterIP
  selector: { app: stirling-pdf }
  ports:
    - name: http
      port: 80
      targetPort: http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: stirling-pdf
  namespace: svc-stirling
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-dns
spec:
  ingressClassName: nginx-internal
  rules:
    - host: pdf.intern.rohrbom.be
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: stirling-pdf
                port:
                  number: 80
  tls:
    - hosts: [pdf.intern.rohrbom.be]
      secretName: stirling-pdf-tls

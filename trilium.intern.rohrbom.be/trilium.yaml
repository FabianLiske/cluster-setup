apiVersion: v1
kind: Namespace
metadata:
  name: svc-trilium
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: trilium-data
  namespace: svc-trilium
spec:
  accessModes: [ReadWriteOnce]
  storageClassName: longhorn-2r
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: trilium
  namespace: svc-trilium
  labels: { app: trilium }
spec:
  replicas: 1
  selector: { matchLabels: { app: trilium } }
  template:
    metadata: { labels: { app: trilium } }
    spec:
      containers:
        - name: trilium
          image: zadam/trilium:latest
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 0
            runAsGroup: 0
            allowPrivilegeEscalation: true
          ports:
            - name: http
              containerPort: 8080
          env:
            - name: TRILIUM_PORT
              value: "8080"
          volumeMounts:
            - name: data
              mountPath: /home/node/trilium-data
          readinessProbe:
            httpGet: { path: "/", port: http }
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 12
          livenessProbe:
            httpGet: { path: "/", port: http }
            initialDelaySeconds: 120
            periodSeconds: 20
            timeoutSeconds: 5
            failureThreshold: 6
          resources:
            requests: { cpu: 100m, memory: 256Mi }
            limits:   { cpu: "1",   memory: 1Gi }
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: trilium-data
---
apiVersion: v1
kind: Service
metadata:
  name: trilium-svc
  namespace: svc-trilium
  labels: { app: trilium }
spec:
  type: ClusterIP
  selector: { app: trilium }
  ports:
    - name: http
      port: 80
      targetPort: http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: trilium
  namespace: svc-trilium
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-dns"
spec:
  ingressClassName: nginx-internal
  rules:
    - host: trilium.intern.rohrbom.be
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: trilium-svc
                port: { number: 80 }
  tls:
    - hosts: [trilium.intern.rohrbom.be]
      secretName: trilium-tls

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: node-exporter
  namespace: ops-monitoring
  labels: { app: node-exporter }
spec:
  selector:
    matchLabels: { app: node-exporter }
  template:
    metadata:
      labels: { app: node-exporter }
    spec:
      hostPID: true
      tolerations:
        - operator: "Exists"
      containers:
        - name: node-exporter
          image: prom/node-exporter:latest
          imagePullPolicy: IfNotPresent
          args:
            - --path.rootfs=/host/root
            - --path.procfs=/host/proc
            - --path.sysfs=/host/sys
            - --no-collector.hwmon
          ports:
            - { name: metrics, containerPort: 9100 }
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
          resources:
            requests: { cpu: 50m, memory: 64Mi }
            limits:   { cpu: 200m, memory: 256Mi }
          volumeMounts:
            - { name: root, mountPath: /host/root, readOnly: true }
            - { name: proc, mountPath: /host/proc, readOnly: true }
            - { name: sys,  mountPath: /host/sys,  readOnly: true }
      volumes:
        - name: root
          hostPath: { path: /, type: Directory }
        - name: proc
          hostPath: { path: /proc, type: Directory }
        - name: sys
          hostPath: { path: /sys, type: Directory }
---
apiVersion: v1
kind: Service
metadata:
  name: node-exporter
  namespace: ops-monitoring
  labels: { app: node-exporter }
annotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "9100"
spec:
  clusterIP: None
  selector: { app: node-exporter }
  ports:
    - { name: metrics, port: 9100, targetPort: metrics }
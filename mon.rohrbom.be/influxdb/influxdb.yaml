apiVersion: v1
kind: Namespace
metadata:
  name: ops-monitoring
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: influxdb-data
  namespace: ops-monitoring
spec:
  accessModes: [ReadWriteOnce]
  storageClassName: longhorn-2r
  resources:
    requests:
      storage: 50Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: influxdb
  namespace: ops-monitoring
  labels: { app: influxdb }
spec:
  replicas: 1
  selector: { matchLabels: { app: influxdb } }
  template:
    metadata: { labels: { app: influxdb } }
    spec:
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
      containers:
        - name: influxdb
          image: influxdb:2.7
          imagePullPolicy: IfNotPresent
          ports: [{ name: http, containerPort: 8086 }]
          env:
            - { name: TZ, value: Europe/Berlin }
            - { name: INFLUXD_REPORTING_DISABLED, value: "true" }
          volumeMounts:
            - { name: data, mountPath: /var/lib/influxdb2 }
          readinessProbe:
            httpGet: { path: /health, port: http }
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            httpGet: { path: /health, port: http }
            initialDelaySeconds: 30
            periodSeconds: 20
          resources:
            requests: { cpu: 200m, memory: 1Gi }
            limits:   { cpu: "2",  memory: 4Gi }
      volumes:
        - name: data
          persistentVolumeClaim: { claimName: influxdb-data }
---
apiVersion: v1
kind: Service
metadata:
  name: influxdb
  namespace: ops-monitoring
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8086"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  selector: { app: influxdb }
  ports:
    - { name: http, port: 8086, targetPort: http }
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: influxdb
  namespace: ops-monitoring
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-dns
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
spec:
  ingressClassName: nginx-mgmt
  rules:
    - host: influx.mon.rohrbom.be
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service: { name: influxdb, port: { number: 8086 } }
  tls:
    - hosts: [influx.mon.rohrbom.be]
      secretName: influxdb-tls
---
# Erlaubt Traffic nur vom mgmt-Ingress-Namespace (VLAN 10)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: influx-allow-ops-and-ingress
  namespace: ops-monitoring
spec:
  podSelector: { matchLabels: { app: influxdb } }
  policyTypes: [Ingress]
  ingress:
    - from:
        - namespaceSelector:
            matchLabels: { kubernetes.io/metadata.name: ops-monitoring }
        - namespaceSelector:
            matchLabels: { kubernetes.io/metadata.name: ingress-vlan10-mgmt }
      ports:
        - protocol: TCP
          port: 8086
